#!/usr/bin/env bash
self=$(readlink -f $0); tasks=`dirname ${self}`; projectRoot=`dirname ${tasks}`;

GID=`id -g`; NEW_TAG=`date +%Y%m%d`;

DATAGRIP_V=`docker run --rm -e HOST_USER_ID=$UID -e HOST_GROUP_ID=$GID justinvanwinkle/datagrip:latest cat /opt/datagrip/build.txt`;

NEW_RELEASE_NOTES="$NEW_RELEASE_NOTES __datagrip version info__"$'\n\n'"\`\`\`"$'\n'"$DATAGRIP_V"$'\n'"\`\`\`"$'\n\n';

# Compare the last release notes to the ones we just generated, if they are the same we will abort this publish.
CURRENT_RELEASE_NOTES=`./bin/linux/amd64/github-release info --user justin-vanwinkle --repo Docker-DataGrip --json | jq -r '.Releases[0].body'`;
CURRENT_RELEASE_HASH=`echo -n -e "$CURRENT_RELEASE_NOTES"$'\n\n' | md5sum | awk '{print $1}'`;
NEW_RELEASE_HASH=`echo -n "$NEW_RELEASE_NOTES" | md5sum | awk '{print $1}'`;
if [ "$CURRENT_RELEASE_HASH" == "$NEW_RELEASE_HASH" ]; then
    exit 1;
fi

# Push the image to docker hub
docker push justinvanwinkle/datagrip;

# Push a new tag for the current day
git config --global user.email "vanwinkle.justin@gmail.com"
git config --global user.name "Justin VanWinkle"
git checkout master
git tag $NEW_TAG
git push https://$GITHUB_TOKEN@github.com/justin-vanwinkle/Docker-DataGrip.git master --tags

# Create a new release
echo "$NEW_RELEASE_NOTES" | ./bin/linux/amd64/github-release release \
    --user justin-vanwinkle \
    --repo Docker-DataGrip \
    --tag $NEW_TAG \
    --description -

# Replace the ":latest" tag in the pseudo binary scripts with the new release.
sed -i "s/:latest/:$NEW_TAG/g" ./bin/datagrip

# Upload the pseudo binary scripts to the release.
./bin/linux/amd64/github-release upload \
    --user justin-vanwinkle \
    --repo Docker-DataGrip \
    --tag `date +%Y%m%d` \
    --name "datagrip.sh" \
    --file ./bin/datagrip